'use strict';

(function () {
  var arr;
  var txt;
  var items;
  var lists;

  // init set
  arr = JSON.parse(localStorage.getItem('order')) || [1, 2, 3, 4, 5, 6, 7, 8, 9];
  txt = JSON.parse(localStorage.getItem('name')) || ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];

  arr.forEach(function (item, index) {
    var id = 'li-' + ++index;
    var i = item - 1;
    var box;
    var el;
    var t;

    box = document.getElementById(id);
    el = document.createElement('a');
    t = document.createTextNode(txt[i]);

    el.id = 'item-' + item;
    el.href = '#' + txt[i];
    el.setAttribute('class', 'items');
    el.setAttribute('draggable', true);
    el.dataset.order = item;

    el.appendChild(t);
    box.appendChild(el);
  });

  // update localstorage before unload
  window.addEventListener('beforeunload', function () {
    var items = document.querySelectorAll('.items');
    var newArr = [].slice.call(items).map(function (item) {
      return item.dataset.order;
    });

    localStorage.setItem('order', JSON.stringify(newArr));
    localStorage.setItem('name', JSON.stringify(txt));
  }, false);

  // drag and drop events
  items = document.querySelectorAll('.items');
  lists = document.querySelectorAll('li');

  [].slice.call(lists).forEach(function (item) {
    item.addEventListener('dragover', function (e) {
      e.preventDefault();
    }, false);

    item.addEventListener('drop', function (e) {
      var dt = e.dataTransfer;
      var frag = document.createDocumentFragment();
      var from = document.getElementById(dt.getData('from'));
      var fromBox = from.parentNode;

      e.preventDefault();

      frag.appendChild(from);
      fromBox.appendChild(e.target);
      e.currentTarget.appendChild(frag);
    }, false);
  });

  [].slice.call(items).forEach(function (item) {
    item.onclick = function (e) {
      e.preventDefault();
    };

    item.addEventListener('dragstart', function (e) {
      var dt = e.dataTransfer;
      dt.setData('from', e.target.id);
    }, false);
  });
})();
//# sourceMappingURL=data:application/json;base64,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WUFBWSxDQUFDO0FBQ3hCLFFBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDakMsRUFBRSxLQUFLLENBQUMsQ0FBQztHQUNYLENBQUMsQ0FBQztDQUNKLENBQUEsRUFBRyxDQUFDIiwiZmlsZSI6ImRyYWctYW5kLWRyb3AvbWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcbiAgdmFyIGFycjtcbiAgdmFyIHR4dDtcbiAgdmFyIGl0ZW1zO1xuICB2YXIgbGlzdHM7XG5cbiAgLy8gaW5pdCBzZXRcbiAgYXJyID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnb3JkZXInKSkgfHxcbiAgICBbMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOV07XG4gIHR4dCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ25hbWUnKSkgfHxcbiAgICBbJ29uZScsICd0d28nLCAndGhyZWUnLCAnZm91cicsICdmaXZlJywgJ3NpeCcsICdzZXZlbicsICdlaWdodCcsICduaW5lJ107XG5cbiAgYXJyLmZvckVhY2goZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICB2YXIgaWQgPSAnbGktJyArICgrK2luZGV4KTtcbiAgICB2YXIgaSA9IGl0ZW0gLSAxO1xuICAgIHZhciBib3g7XG4gICAgdmFyIGVsO1xuICAgIHZhciB0O1xuXG4gICAgYm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIHQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0eHRbaV0pO1xuXG4gICAgZWwuaWQgPSAnaXRlbS0nICsgaXRlbTtcbiAgICBlbC5ocmVmID0gJyMnICsgdHh0W2ldO1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaXRlbXMnKTtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ2RyYWdnYWJsZScsIHRydWUpO1xuICAgIGVsLmRhdGFzZXQub3JkZXIgPSBpdGVtO1xuXG4gICAgZWwuYXBwZW5kQ2hpbGQodCk7XG4gICAgYm94LmFwcGVuZENoaWxkKGVsKTtcbiAgfSk7XG5cbiAgLy8gdXBkYXRlIGxvY2Fsc3RvcmFnZSBiZWZvcmUgdW5sb2FkXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmV1bmxvYWQnLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgaXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaXRlbXMnKTtcbiAgICB2YXIgbmV3QXJyID0gW10uc2xpY2UuY2FsbChpdGVtcykubWFwKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgIHJldHVybiBpdGVtLmRhdGFzZXQub3JkZXI7XG4gICAgfSk7XG5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnb3JkZXInLCBKU09OLnN0cmluZ2lmeShuZXdBcnIpKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbmFtZScsIEpTT04uc3RyaW5naWZ5KHR4dCkpO1xuICB9LCBmYWxzZSk7XG5cbiAgLy8gZHJhZyBhbmQgZHJvcCBldmVudHNcbiAgaXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaXRlbXMnKTtcbiAgbGlzdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdsaScpO1xuXG4gIFtdLnNsaWNlLmNhbGwobGlzdHMpLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignZHJhZ292ZXInLCBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSwgZmFsc2UpO1xuXG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIGR0ID0gZS5kYXRhVHJhbnNmZXI7XG4gICAgICB2YXIgZnJhZyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgIHZhciBmcm9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZHQuZ2V0RGF0YSgnZnJvbScpKTtcbiAgICAgIHZhciBmcm9tQm94ID0gZnJvbS5wYXJlbnROb2RlO1xuXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGZyYWcuYXBwZW5kQ2hpbGQoZnJvbSk7XG4gICAgICBmcm9tQm94LmFwcGVuZENoaWxkKGUudGFyZ2V0KTtcbiAgICAgIGUuY3VycmVudFRhcmdldC5hcHBlbmRDaGlsZChmcmFnKTtcbiAgICB9LCBmYWxzZSk7XG4gIH0pO1xuXG4gIFtdLnNsaWNlLmNhbGwoaXRlbXMpLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgIGl0ZW0ub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuXG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgZHQgPSBlLmRhdGFUcmFuc2ZlcjtcbiAgICAgIGR0LnNldERhdGEoJ2Zyb20nLCBlLnRhcmdldC5pZCk7XG4gICAgfSwgZmFsc2UpO1xuICB9KTtcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
